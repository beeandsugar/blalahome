package unit6.oop;

/**
 * 面向对象编程---OOP = Object-oriented Programming
 *
 * 【万物皆有模板】
 * 类--模板--定义一类对象的方法和属性
 * 类名首字母大写 --- People
 *
 * 对象--类的实例化
 * 对象首字母小写 -- banana
 */

/**
 * 继承 extends
 * 子类继承父类（基类）--属性和方法
 * <p>
 * 多态
 * 同一个行为具有多个不同表现形式
 * 优点--减少耦合、灵活可扩展
 * 继承类 or 重写方法实现
 */

/**
 * 多态
 * 同一个行为具有多个不同表现形式
 * 优点--减少耦合、灵活可扩展
 * 继承类 or 重写方法实现
 *  e.g.
 * 支付--方法（行为） --> 用 现金/支付宝/微信 == 多态
 *
 */

/**
 * 抽象 --- abstract
 * abstract + 类 == 抽象类
 * abstract + 方法 == 抽象方法
 *
 * 一个类 包含了 一或多个抽象方法--> 抽象类
 *
 * 【特别点】--只含有声明，没有方法体
 *  定义一个“约束” 或 “规范” --具体的实现--> 子类去实现
 */
