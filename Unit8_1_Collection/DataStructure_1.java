package Unit8_1_Collection;

/**
 * 计算机--数据结构基础
 *
 * 数据结构：
 *  数据元素的集合--研究数据的 逻辑结构 和 物理结构 及其相互关系，并对这种结构定义相适应的运算
 *  设计相应的算法，经过运算后，仍然保持原有的结构类型
 *
 *  数据结构 = 相互之间存在 一种或多种特定关系 的数据元素集合
 *  结构 = 数据元素之间存在的关系
 *
 * 1.线性结构---各结点之间具有线性关系。有且仅有一个开始结点、一个终端结点。
 *    ** 栈、队列、和串
 * 2.非线性结构 --- 各结点之间有不同的关系，一个结点可能有多个前驱结点，
 *
 * 3.1. 栈 Stack --- 限定在表的一端（栈顶）进行插入/删除运算，先进后出。 另一端 = 栈底
 * 3.2. 队列 Queue --- 限定在表的一端（front 队头）进行删除，在表的另一端（rear 队尾）进行插入，先进先出。
 *
 * 3.3. 数组 Array --- 最基本的数据结构，将具有 相同类型的、若干变量、有序地 组织在一起的集合。
 *      ** 根据下标进行操作。
 * 4.4. 链表 LinkedList ---数据元素按照链式存储结构进行存储的数据结构，这种存储结构具有在【物理上存在非连续】的特点。
 *      每个数据结点 = 数据域 + 指针域 ， 指针域保存了数据结构中 下一个元素存放的地址 --->实现了物理上不用连续。
 *
 *
 *
 */
public class DataStructure_1 {
}
